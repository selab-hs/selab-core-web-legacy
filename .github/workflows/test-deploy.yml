name: Deploy to ECR

on:
  push:
    branches: [ test ]

jobs:
  build:
    
    name: Build Image
    runs-on: ubuntu-latest
  
    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: docker_nodejs_demo
        IMAGE_TAG: nodejs_demo_image
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
# name: SeLab-test site

# on: 
#   push:
#     branches: [test]

# jobs:
#   CD:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Git Checkout
#         uses: actions/checkout@v3

#       - name: use node.js 16.x
#         uses: actions/setup-node@v3
#         with: 
#           node-version: 16.x

#       - name: Install packages
#         run: rm -rf node_modules && yarn install --frozen-lockfile
      
#       - name: Build
#         run: yarn build

#       - name: find build files
#         run: ls

#       - name: Configure AWS Credentials
#         #uses: aws-actions/configure-aws-credentials@v1
#         env: 
#           AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
#           AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
#           aws-region: ap-northeast-2

#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1

#       - name: Build, tag, and push image to Amazon ECR
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           ECR_REPOSITORY: docker_nodejs_demo
#           IMAGE_TAG: nodejs_demo_image
#         run: |
#           docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#           docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
# # run: |
# #   aws s3 cp \
# #   --recursive \
# #   --region ap-northeast-2 \
# #   out s3://${{secrets.BUCKET_NAME}}
